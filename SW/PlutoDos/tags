!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACIA	settime.asm	/^        ACIA = $7FE0$/;"	d
ACK	xmodem.asm	/^        ACK = $06       ; good block acknowledged$/;"	d
ASC2BN	settime.asm	/^        ASC2BN = $811E$/;"	d
BEEP	settime.asm	/^        BEEP = $813A$/;"	d
BN2ASC	settime.asm	/^        BN2ASC = $8142$/;"	d
BadCrc	xmodem.asm	/^BadCrc:$/;"	l
BegBlk	xmodem.asm	/^BegBlk:$/;"	l
CAN	xmodem.asm	/^        CAN = $18       ; cancel (not STAndard, not supported)$/;"	d
CHIN	settime.asm	/^        CHIN = $8164$/;"	d
COLDSTART	settime.asm	/^        COLDSTART = $861D$/;"	d
COUT	settime.asm	/^        COUT = $8186$/;"	d
COUT2	settime.asm	/^        COUT2 = $8183$/;"	d
CR	xmodem.asm	/^        CR = $0d        ; carriage return$/;"	d
CR2	settime.asm	/^        CR2 = $81A1$/;"	d
CROUT	settime.asm	/^        CROUT = $81A4$/;"	d
CalcCRC	xmodem.asm	/^CalcCRC .proc$/;"	l
CalcCRC1	xmodem.asm	/^CalcCRC1:$/;"	l
CopyBlk	xmodem.asm	/^CopyBlk:$/;"	l
CopyBlk3	xmodem.asm	/^CopyBlk3:$/;"	l
CopyBlk4	xmodem.asm	/^CopyBlk4:$/;"	l
DECINDEX	settime.asm	/^        DECINDEX = $8193$/;"	d
DELAY1	settime.asm	/^        DELAY1 = $81B1$/;"	d
DELAY2	settime.asm	/^        DELAY2 = $81B5$/;"	d
DOLLAR	settime.asm	/^        DOLLAR = $819C$/;"	d
DOUPLOAD	xmodem.asm	/^DOUPLOAD:$/;"	l
DS1511	settime.asm	/^        DS1511 = $7FA0$/;"	d
Done	xmodem.asm	/^Done:$/;"	l
EOT	xmodem.asm	/^        EOT = $04       ; end of text marker$/;"	d
ESC	xmodem.asm	/^        ESC = $1b       ; ESC to exit$/;"	d
EXITUPLOAD	xmodem.asm	/^EXITUPLOAD:$/;"	l
ErrMsg	xmodem.asm	/^ErrMsg:$/;"	l
Flush	xmodem.asm	/^Flush   .proc$/;"	l
GetBlk	xmodem.asm	/^GetBlk:$/;"	l
GetBlk2	xmodem.asm	/^GetBlk2:$/;"	l
GoodBlk1	xmodem.asm	/^GoodBlk1:$/;"	l
GoodBlk2	xmodem.asm	/^GoodBlk2:$/;"	l
GoodCrc	xmodem.asm	/^GoodCrc:$/;"	l
GoodMsg	xmodem.asm	/^GoodMsg:$/;"	l
GotByte	xmodem.asm	/^GotByte:$/;"	l
GotByte1	xmodem.asm	/^GotByte1:$/;"	l
HEXIN	settime.asm	/^        HEXIN = $81C6$/;"	d
HEXIN2	settime.asm	/^        HEXIN2 = $81C0$/;"	d
HEXIN4	settime.asm	/^        HEXIN4 = $81C4$/;"	d
INCINDEX	settime.asm	/^        INCINDEX = $8258$/;"	d
INTERRUPT	settime.asm	/^        INTERRUPT = $8777$/;"	d
IncBlk	xmodem.asm	/^IncBlk:$/;"	l
LF	xmodem.asm	/^        LF = $0a        ; line feed$/;"	d
LdBuff0	xmodem.asm	/^LdBuff0:$/;"	l
LdBuff1	xmodem.asm	/^LdBuff1:$/;"	l
LdBuff2	xmodem.asm	/^LdBuff2:$/;"	l
LdBuff3	xmodem.asm	/^LdBuff3:$/;"	l
LdBuff4	xmodem.asm	/^LdBuff4:$/;"	l
LdBuff5	xmodem.asm	/^LdBuff5:$/;"	l
LdBuffer	xmodem.asm	/^LdBuffer:$/;"	l
Msg	xmodem.asm	/^Msg:$/;"	l
NAK	xmodem.asm	/^        NAK = $15       ; bad block acknowledged$/;"	d
NMON	settime.asm	/^        NMON = $8687$/;"	d
PRASC	settime.asm	/^        PRASC = $82F8$/;"	d
PRBYTE	settime.asm	/^        PRBYTE = $8305$/;"	d
PRINDX	settime.asm	/^        PRINDX = $8316$/;"	d
PROMPT	settime.asm	/^        PROMPT = $8323$/;"	d
PROMPT2	settime.asm	/^        PROMPT2 = $856E$/;"	d
PUT_DATE_AND_TIME	settime.asm	/^        PUT_DATE_AND_TIME = $809F$/;"	d
PrintMsg	xmodem.asm	/^PrintMsg    .proc$/;"	l
Print_Err	xmodem.asm	/^Print_Err   .proc$/;"	l
Print_Good	xmodem.asm	/^Print_Good  .proc$/;"	l
PrtAbort	xmodem.asm	/^PrtAbort:$/;"	l
RDLINE	settime.asm	/^        RDLINE = $835C$/;"	d
RDoneNow	xmodem.asm	/^RDoneNow:$/;"	l
RESREGS	settime.asm	/^        RESREGS = $83C4$/;"	d
Rbuff	xmodem.asm	/^        Rbuff = $0300       ; temp 132 byte receive buffer$/;"	d
Resend	xmodem.asm	/^Resend:$/;"	l
SAVREGS	settime.asm	/^        SAVREGS = $83BD$/;"	d
SCalcCRC	xmodem.asm	/^SCalcCRC:$/;"	l
SET	settime.asm	/^        SET = $83CB$/;"	d
SOH	xmodem.asm	/^        SOH = $01       ; Start block$/;"	d
SPC2	settime.asm	/^        SPC2 = $83F3$/;"	d
SPC4	settime.asm	/^        SPC4 = $83F0$/;"	d
SendBlk	xmodem.asm	/^SendBlk:$/;"	l
Seterror	xmodem.asm	/^Seterror:$/;"	l
SetstAddr	xmodem.asm	/^SetstAddr:$/;"	l
StartBlk	xmodem.asm	/^StartBlk:$/;"	l
StartCrc	xmodem.asm	/^StartCrc:$/;"	l
TIMER	settime.asm	/^        TIMER = $83CD$/;"	d
UPLOAD	xmodem.asm	/^UPLOAD  .proc$/;"	l
VIA	settime.asm	/^        VIA = $7FC0$/;"	d
Wait4CRC	xmodem.asm	/^Wait4CRC:$/;"	l
XModemReceive	xmodem.asm	/^XModemReceive .proc$/;"	l
XModemSend	xmodem.asm	/^XModemSend:$/;"	l
a_hexdec	bin_to_ascii.asm	/^a_hexdec: = 'A'-'9'-2                   ;hex to decimal difference$/;"	d
a_hexnum	ascii_to_bin.asm	/^a_hexnum: = 'A'-'9'-1                   ;hex to decimal difference$/;"	d
acia	time_first_row.asm	/^        acia = $7fe0$/;"	d
acia6551	time_first_row.asm	/^        acia6551 = $7fe0$/;"	d
acia_init	acia.asm	/^acia_init: .proc$/;"	l
acia_irq	acia.asm	/^acia_irq: .block$/;"	l
again	monitor.asm	/^again:$/;"	l
alarm	rtc.asm	/^alarm:  .proc$/;"	l
asc2bn	time_first_row.asm	/^        asc2bn = $8114$/;"	d
ascii_to_bin	ascii_to_bin.asm	/^ascii_to_bin: .proc$/;"	l
b_bell	bios.asm	/^b_bell:         jmp bell$/;"	l
b_bin_to_asc	bios.asm	/^b_bin_to_asc:   jmp binary_to_ascii$/;"	l
b_chin	bios.asm	/^b_chin:         jmp chin$/;"	l
b_chout	bios.asm	/^b_chout:        jmp chout$/;"	l
b_cr2	bios.asm	/^b_cr2:          jmp cr2$/;"	l
b_crout	bios.asm	/^b_crout:        jmp crout$/;"	l
b_dollar	bios.asm	/^b_dollar:       jmp dollar$/;"	l
b_hex_address	bios.asm	/^b_hex_address:  jmp hex_address       ;Print a hex address with leading zeroes. Address should be stored in index_low and index_high.$/;"	l
b_hex_byte	bios.asm	/^b_hex_byte:     jmp hex_byte          ;Print a hex byte with leading zeroes. Byte should be stored in temp.$/;"	l
b_input_dec	bios.asm	/^b_input_dec:    jmp input_dec$/;"	l
b_input_hex	bios.asm	/^b_input_hex:    jmp input_hex$/;"	l
b_prout	bios.asm	/^b_prout:        jmp prout$/;"	l
b_read_char	bios.asm	/^b_read_char:    jmp read_character      ;Read character and convert to uppercase.$/;"	l
b_read_line	bios.asm	/^b_read_line:    jmp read_line$/;"	l
b_space	bios.asm	/^b_space:        jmp space$/;"	l
b_space2	bios.asm	/^b_space2:       jmp space2$/;"	l
b_space4	bios.asm	/^b_space4:       jmp space4$/;"	l
b_spacex	bios.asm	/^b_spacex:       jmp spacex$/;"	l
backspace	bios.asm	/^backspace: .proc$/;"	l
basetab	ascii_to_bin.asm	/^basetab: .byte 16,10,2                  ;number bases per radix, HEX, DEC, BIN$/;"	l
bcdouta	time_first_row.asm	/^        bcdouta = $80ff$/;"	d
beep	time_first_row.asm	/^        beep = $8130$/;"	d
bell	bios.asm	/^bell:   .proc$/;"	l
bflag	xmodem.asm	/^        bflag = $a7         ; block flag$/;"	d
binary_to_ascii	bin_to_ascii.asm	/^binary_to_ascii: .proc$/;"	l
bits_per_digit_table	ascii_to_bin.asm	/^bits_per_digit_table: .byte 4,3,1       ;bits per digit per radix$/;"	l
bitstab	bin_to_ascii.asm	/^bitstab: .byte 4,4,1                    ;bits per numeral$/;"	l
blkno	xmodem.asm	/^        blkno = $a6         ; block number$/;"	d
bn2asc	time_first_row.asm	/^        bn2asc = $8138$/;"	d
brk_irq	bios.asm	/^brk_irq: .block$/;"	l
check_buffer	bios.asm	/^check_buffer:$/;"	l
chin	bios.asm	/^chin:    .proc$/;"	l
chin	time_first_row.asm	/^        chin = $815a$/;"	d
chin_no_wait	bios.asm	/^chin_no_wait: .proc$/;"	l
chout	bios.asm	/^chout:   .proc$/;"	l
clear_entire_screen	time_first_row.asm	/^clear_entire_screen .null "[2J"$/;"	l
clear_number_buffer	bios.asm	/^clear_number_buffer: .proc$/;"	l
coldstart	bios.asm	/^coldstart: .block$/;"	l
coldstart	time_first_row.asm	/^        coldstart = $8613$/;"	d
command_not_supported	monitor.asm	/^command_not_supported:$/;"	l
command_pointers	monitor.asm	/^command_pointers:$/;"	l
command_table	monitor.asm	/^command_table:$/;"	l
compress	cfs.asm	/^compress:    .proc$/;"	l
convert	ascii_to_bin.asm	/^convert:$/;"	l
cout	time_first_row.asm	/^        cout = $817c$/;"	d
cout2	time_first_row.asm	/^        cout2 = $8179$/;"	d
cr2	bios.asm	/^cr2:    .proc$/;"	l
cr2	time_first_row.asm	/^        cr2 = $8197$/;"	d
crc	xmodem.asm	/^        crc = $a8           ; CRC lo byte  (two byte variable)$/;"	d
crch	xmodem.asm	/^        crch = $a9          ; CRC hi byte$/;"	d
crchi	xmodem.asm	/^crchi:$/;"	l
crclo	xmodem.asm	/^crclo:$/;"	l
crout	bios.asm	/^crout:   .proc$/;"	l
crout	time_first_row.asm	/^        crout = $819a$/;"	d
dec_index	bios.asm	/^dec_index:  .proc$/;"	l
decimal_input	bios.asm	/^decimal_input:$/;"	l
decindex	time_first_row.asm	/^        decindex = $8189$/;"	d
decmsd	time_first_row.asm	/^decmsd$/;"	l
delay1	time_first_row.asm	/^        delay1 = $81a7$/;"	d
delay1	via.asm	/^delay1:$/;"	l
delay2	time_first_row.asm	/^        delay2 = $81ab$/;"	d
delay2	via.asm	/^delay2:  .proc$/;"	l
do_break	bios.asm	/^do_break:$/;"	l
dollar	bios.asm	/^dollar: .proc$/;"	l
dollar	time_first_row.asm	/^        dollar = $8192$/;"	d
done	bios.asm	/^done:$/;"	l
done	cfs.asm	/^done:$/;"	l
done	ide_routines.asm	/^done:$/;"	l
ds1511	time_first_row.asm	/^        ds1511 = $7fa0$/;"	d
dump_memory	monitor.asm	/^dump_memory: .proc$/;"	l
eofp	xmodem.asm	/^        eofp = TEMP2        ; end of file address pointer (2 bytes)$/;"	d
eofph	xmodem.asm	/^        eofph = TEMP2H      ;  "    "   "   "$/;"	d
errcnt	xmodem.asm	/^        errcnt = $a7        ; error counter 10 is the limit$/;"	d
error	ide_routines.asm	/^error:$/;"	l
execute_command	monitor.asm	/^execute_command:$/;"	l
exit	acia.asm	/^exit:$/;"	l
exit	bios.asm	/^exit:$/;"	l
exit	via.asm	/^exit:$/;"	l
exit_read_line	bios.asm	/^exit_read_line:$/;"	l
facbcd	bin_to_ascii.asm	/^facbcd:$/;"	l
facbcd01	bin_to_ascii.asm	/^facbcd01:$/;"	l
facbcd02	bin_to_ascii.asm	/^facbcd02:$/;"	l
facbcd03	bin_to_ascii.asm	/^facbcd03:$/;"	l
facbcd04	bin_to_ascii.asm	/^facbcd04:$/;"	l
facbcd05	bin_to_ascii.asm	/^facbcd05:$/;"	l
facbcd06	bin_to_ascii.asm	/^facbcd06:$/;"	l
facbcd07	bin_to_ascii.asm	/^facbcd07:$/;"	l
facbcd08	bin_to_ascii.asm	/^facbcd08:$/;"	l
find_boot_sector	cfs.asm	/^find_boot_sector: 	.proc$/;"	l
get_char	bios.asm	/^get_char:$/;"	l
get_date_and_time	rtc.asm	/^get_date_and_time: .proc$/;"	l
get_date_and_time	time_first_row.asm	/^        get_date_and_time  = $8072$/;"	d
get_system_up_time	rtc.asm	/^get_system_up_time: .proc$/;"	l
hex_address	bios.asm	/^hex_address: .proc$/;"	l
hex_byte	bios.asm	/^hex_byte: .proc$/;"	l
hex_mode	bios.asm	/^hex_mode: .proc$/;"	l
hexin	time_first_row.asm	/^        hexin = $81bc$/;"	d
hexin2	time_first_row.asm	/^        hexin2 = $81b6$/;"	d
hexin4	time_first_row.asm	/^        hexin4 = $81ba$/;"	d
ide_blp	ide_routines.asm	/^ide_blp:$/;"	l
ide_dlp	ide_routines.asm	/^ide_dlp:$/;"	l
ide_drive_data_port	ide_routines.asm	/^		ide_drive_data_port = ide_io			; IDE data port$/;"	d
ide_drive_error_code	ide_routines.asm	/^		ide_drive_error_code = ide_io + 1		; Read: Error code$/;"	d
ide_drive_lba0	ide_routines.asm	/^		ide_drive_lba0 = ide_io + 3				; lba 0:7$/;"	d
ide_drive_lba1	ide_routines.asm	/^		ide_drive_lba1 = ide_io + 4				; lba 8:15$/;"	d
ide_drive_lba2	ide_routines.asm	/^		ide_drive_lba2 = ide_io + 5				; lba 16:23$/;"	d
ide_drive_lba3_ms_lbamd	ide_routines.asm	/^		ide_drive_lba3_ms_lbamd = ide_io + 6 	; 0:3 lba 24:27, 4 master (0) slave (1), 6 = 1 for lba access$/;"	d
ide_drive_rdstatus_wrcmd	ide_routines.asm	/^		ide_drive_rdstatus_wrcmd = ide_io + 7	; Read -> status, Write -> command$/;"	d
ide_err	ide_routines.asm	/^ide_err:$/;"	l
ide_get_id	ide_routines.asm	/^ide_get_id:	.proc$/;"	l
ide_high_byte	ide_routines.asm	/^		ide_high_byte = ide_io + 8				; Control for read or write latch$/;"	d
ide_id_drive_cmd	ide_routines.asm	/^		ide_id_drive_cmd = $ec$/;"	d
ide_init_devices	ide_routines.asm	/^ide_init_devices: .proc$/;"	l
ide_init_status	ide_routines.asm	/^ide_init_status: .proc$/;"	l
ide_io	ide_routines.asm	/^		ide_io = $7f60							; Change this to $7f60 when pcb arrives.$/;"	d
ide_mast	ide_routines.asm	/^ide_mast:$/;"	l
ide_read_buffer	ide_routines.asm	/^ide_read_buffer:	.proc$/;"	l
ide_read_sector	ide_routines.asm	/^ide_read_sector: .proc$/;"	l
ide_read_sector_cmd	ide_routines.asm	/^		ide_read_sector_cmd = $20$/;"	d
ide_sector_count	ide_routines.asm	/^		ide_sector_count = ide_io + 2			; number of sectors to transfer$/;"	d
ide_setup_lba	ide_routines.asm	/^ide_setup_lba:	.proc$/;"	l
ide_srex	ide_routines.asm	/^ide_srex:$/;"	l
ide_test_error	ide_routines.asm	/^ide_test_error:	.proc$/;"	l
ide_time_out	ide_routines.asm	/^ide_time_out:$/;"	l
ide_to2	ide_routines.asm	/^ide_to2:$/;"	l
ide_wait_buffer	ide_routines.asm	/^ide_wait_buffer: .proc$/;"	l
ide_wait_busy_ready	ide_routines.asm	/^ide_wait_busy_ready:	.proc$/;"	l
ide_wbsy	ide_routines.asm	/^ide_wbsy:$/;"	l
ide_wdrq	ide_routines.asm	/^ide_wdrq:$/;"	l
ide_write_buffer	ide_routines.asm	/^ide_write_buffer:	.proc$/;"	l
ide_write_sector	ide_routines.asm	/^ide_write_sector: .proc$/;"	l
ide_write_sector_cmd	ide_routines.asm	/^		ide_write_sector_cmd = $30$/;"	d
idebufrd	ide_routines.asm	/^idebufrd:$/;"	l
idebufwt	ide_routines.asm	/^idebufwt:$/;"	l
inc_index	bios.asm	/^inc_index:  .proc$/;"	l
incindex	time_first_row.asm	/^        incindex = $824e$/;"	d
init	bios.asm	/^init:$/;"	l
input	bios.asm	/^input:  .proc$/;"	l
input_dec	bios.asm	/^input_dec: .proc$/;"	l
input_hex	bios.asm	/^input_hex:  .proc$/;"	l
interrupt	time_first_row.asm	/^        interrupt = $876d$/;"	d
irq	bios.asm	/^irq:$/;"	l
irq_end	bios.asm	/^irq_end: .block$/;"	l
l01	ascii_to_bin.asm	/^l01:$/;"	l
l06	ascii_to_bin.asm	/^l06:$/;"	l
l06	bin_to_ascii.asm	/^l06:$/;"	l
l07	ascii_to_bin.asm	/^l07:$/;"	l
l07	bin_to_ascii.asm	/^l07:$/;"	l
l08	ascii_to_bin.asm	/^l08:$/;"	l
l08	bin_to_ascii.asm	/^l08:$/;"	l
l09	ascii_to_bin.asm	/^l09:$/;"	l
l09	bin_to_ascii.asm	/^l09:$/;"	l
l1	acia.asm	/^l1:$/;"	l
l1	bios.asm	/^l1:$/;"	l
l1	monitor.asm	/^l1:$/;"	l
l1	rtc.asm	/^l1:$/;"	l
l10	ascii_to_bin.asm	/^l10:$/;"	l
l10	bin_to_ascii.asm	/^l10:$/;"	l
l10	rtc.asm	/^l10:$/;"	l
l11	ascii_to_bin.asm	/^l11:$/;"	l
l11	bin_to_ascii.asm	/^l11:$/;"	l
l12	ascii_to_bin.asm	/^l12:$/;"	l
l12	bin_to_ascii.asm	/^l12:$/;"	l
l13	ascii_to_bin.asm	/^l13:$/;"	l
l13	bin_to_ascii.asm	/^l13:$/;"	l
l14	ascii_to_bin.asm	/^l14:$/;"	l
l14	bin_to_ascii.asm	/^l14:$/;"	l
l15	ascii_to_bin.asm	/^l15:$/;"	l
l15	bin_to_ascii.asm	/^l15:$/;"	l
l16	ascii_to_bin.asm	/^l16:$/;"	l
l17	ascii_to_bin.asm	/^l17:$/;"	l
l2	acia.asm	/^l2:$/;"	l
l2	bios.asm	/^l2:$/;"	l
l2	rtc.asm	/^l2:$/;"	l
l3	bios.asm	/^l3:$/;"	l
lastblk	xmodem.asm	/^        lastblk = $a5       ; flag for last block$/;"	d
leading_zeroes	bios.asm	/^leading_zeroes: .proc$/;"	l
loop	bios.asm	/^loop:$/;"	l
loop	monitor.asm	/^loop:$/;"	l
loop	via.asm	/^loop:$/;"	l
lzsttab	bin_to_ascii.asm	/^lzsttab: .byte 3,2,9                    ;leading zero suppression thresholds$/;"	l
m_bits	bin_to_ascii.asm	/^m_bits: = 32                            ;operand bit size$/;"	d
m_cbits	bin_to_ascii.asm	/^m_cbits: = 48                           ;workspace bit size$/;"	d
m_strlen	bin_to_ascii.asm	/^m_strlen: = m_bits+1                    ;maximum printable string length$/;"	d
master_slave_select	ide_routines.asm	/^master_slave_select: .proc$/;"	l
monitor_initialiser	monitor.asm	/^monitor_initialiser: .proc$/;"	l
monitor_main_loop	monitor.asm	/^monitor_main_loop: .proc$/;"	l
move_cursor_to_screen_location_v_h	time_first_row.asm	/^move_cursor_to_screen_location_v_h  .null "[<V>;<H>H"$/;"	l
n_radix	ascii_to_bin.asm	/^n_radix: = 3                            ;number of supported radixes$/;"	d
n_rtcreg	rtc.asm	/^n_rtcreg =*-rtcreg$/;"	l
next	via.asm	/^next:$/;"	l
next_address	monitor.asm	/^next_address:$/;"	l
next_byte	monitor.asm	/^next_byte:$/;"	l
nmi	bios.asm	/^nmi:$/;"	l
nmon	time_first_row.asm	/^        nmon = $867d$/;"	d
notdone	ide_routines.asm	/^notdone:$/;"	l
numstab	bin_to_ascii.asm	/^numstab: .byte 12,12,48                 ;maximum numerals$/;"	l
ok	ide_routines.asm	/^ok:$/;"	l
out_buffer_full	bios.asm	/^out_buffer_full:$/;"	l
prasc	time_first_row.asm	/^        prasc = $82ee$/;"	d
prbyte	time_first_row.asm	/^        prbyte = $82fb$/;"	d
prindx	time_first_row.asm	/^        prindx = $830c$/;"	d
print_byte_line	monitor.asm	/^print_byte_line: .proc$/;"	l
print_colon_dollar	monitor.asm	/^print_colon_dollar: .proc$/;"	l
print_date_and_time	rtc.asm	/^print_date_and_time: .proc$/;"	l
print_date_and_time	time_first_row.asm	/^        print_date_and_time = $801f$/;"	d
print_squiggly_line	monitor.asm	/^print_squiggly_line: .proc$/;"	l
prompt	monitor.asm	/^prompt: .proc$/;"	l
prompt	time_first_row.asm	/^        prompt = $8319$/;"	d
prompt2	time_first_row.asm	/^        prompt2 = $8564$/;"	d
prout	bios.asm	/^prout:   .proc$/;"	l
ptr	xmodem.asm	/^        ptr = INDEX         ; data pointer (two byte variable)$/;"	d
ptrh	xmodem.asm	/^        ptrh = INDEXH       ;   "    "$/;"	d
put_date_and_time	rtc.asm	/^put_date_and_time:  .proc$/;"	l
put_date_and_time	time_first_row.asm	/^        put_date_and_time = $8095$/;"	d
radix_mask	ascii_to_bin.asm	/^radix_mask: = 3                         ;bit 0 and 1 in control_flags holds the radix$/;"	d
rdline	time_first_row.asm	/^        rdline = $8352$/;"	d
read_character	bios.asm	/^read_character: .proc$/;"	l
read_line	bios.asm	/^read_line:  .proc$/;"	l
read_loop	bios.asm	/^read_loop:$/;"	l
receive_char	acia.asm	/^receive_char:$/;"	l
resregs	time_first_row.asm	/^        resregs = $83ba$/;"	d
restore_cursor_position_and_attributes	time_first_row.asm	/^restore_cursor_position_and_attributes .text "8"$/;"	l
retry	xmodem.asm	/^        retry = $ae         ; retry counter$/;"	d
retry2	xmodem.asm	/^        retry2 = $af        ; 2nd counter$/;"	d
ring_bell	bios.asm	/^ring_bell:$/;"	l
rtc_init	rtc.asm	/^rtc_init: .proc$/;"	l
rtc_irq	bios.asm	/^rtc_irq: .block$/;"	l
rtcreg	rtc.asm	/^rtcreg: .byte wr_crb          ;control B               $0f$/;"	l
s_fac	ascii_to_bin.asm	/^s_fac:  = 4                             ;binary accumulator size$/;"	d
s_pfac	bin_to_ascii.asm	/^s_pfac: = m_bits\/8                      ;primary accumulator size$/;"	d
s_ptr	bin_to_ascii.asm	/^s_ptr:  = 2                             ;pointer size$/;"	d
s_wrkspc	bin_to_ascii.asm	/^s_wrkspc: = m_cbits\/8                   ;conversion workspace size$/;"	d
save_cursor_position_and_attributes	time_first_row.asm	/^save_cursor_position_and_attributes .text "7"$/;"	l
savregs	time_first_row.asm	/^        savregs = $83b3$/;"	d
send_date_and_time	time_first_row.asm	/^send_date_and_time .proc$/;"	l
send_escape	time_first_row.asm	/^send_escape$/;"	l
sendit	bios.asm	/^sendit:$/;"	l
set	time_first_row.asm	/^        set = $83c1$/;"	d
set_console_time	rtc.asm	/^set_console_time: .proc$/;"	l
sound_bell	bios.asm	/^sound_bell:$/;"	l
sound_init	sound.asm	/^sound_init:  .proc$/;"	l
space	bios.asm	/^space: .proc$/;"	l
space2	bios.asm	/^space2: .proc$/;"	l
space4	bios.asm	/^space4: .proc$/;"	l
spacex	bios.asm	/^spacex: .proc$/;"	l
spc2	time_first_row.asm	/^        spc2 = $83e9$/;"	d
spc4	time_first_row.asm	/^        spc4 = $83e6$/;"	d
store_character	bios.asm	/^store_character:$/;"	l
timer	time_first_row.asm	/^        timer = $83c3$/;"	d
timer1_interrupt	time_first_row.asm	/^timer1_interrupt$/;"	l
tmp	ide_routines.asm	/^		tmp = $70$/;"	d
tmp1	ide_routines.asm	/^		tmp1 = tmp+1$/;"	d
tmp2	ide_routines.asm	/^		tmp2 = tmp+2$/;"	d
tmp3	ide_routines.asm	/^		tmp3 = tmp+3$/;"	d
transmit_char	acia.asm	/^transmit_char:$/;"	l
update_tod_on_console	time_first_row.asm	/^update_tod_on_console .proc$/;"	l
utdelay	rtc.asm	/^utdelay: .proc$/;"	l
via	time_first_row.asm	/^        via = $7fc0$/;"	d
via1_init	via.asm	/^via1_init: .proc$/;"	l
via1_irq	bios.asm	/^via1_irq: .block$/;"	l
via1_irq_service_routine	via.asm	/^via1_irq_service_routine: .proc$/;"	l
via2_init	via.asm	/^via2_init: .proc$/;"	l
via2_irq	bios.asm	/^via2_irq:  .block$/;"	l
via6522	time_first_row.asm	/^        via6522 = $7fc0$/;"	d
via_init	via.asm	/^via_init: .proc$/;"	l
viainterrupt	time_first_row.asm	/^viainterrupt$/;"	l
